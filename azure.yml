trigger:
  branches:
    include:
      - master  # Specify the branch to trigger builds

pool:
  vmImage: 'windows-latest'  # Use a Windows agent as SQL projects require it

steps:
  # Step 1: Install SSDT using the Visual Studio Installer
  - powershell: |
      $vsInstallerPath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"
      if (Test-Path $vsInstallerPath) {
          # Run Visual Studio Installer to add SSDT (SQL Server Data Tools)
          & $vsInstallerPath modify --installPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" `
                                    --add Microsoft.VisualStudio.Component.SQL.SSDT `
                                    --passive --norestart
      } else {
          Write-Error "Visual Studio Installer not found on this agent."
      }
    displayName: "Install SQL Server Data Tools (SSDT)"
  # Step 1: Install the .NET SDK if needed
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.0.302'  # Specify the required .NET SDK version

  # Step 2: Build the SQL project
  - task: VSBuild@1
    inputs:
      solution: '**/*.sqlproj'  # Path to your SQL project file
      msbuildArgs: '/p:NetCoreBuild=true'  # Ensure compatibility with .NET Core if needed
      platform: 'Any CPU'
      configuration: 'Release'

  # Step 3: Publish the DACPAC as an artifact
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/**/bin/Release'  # Adjust if output path differs
      artifactName: 'dacpac'
      publishLocation: 'Container'
