trigger:
  branches:
    include:
      - master 
 
pool:
  vmImage: 'windows-latest' 
 
stages:
  - stage: Build
    displayName: "Build Stage"
    jobs:
      - job: Build
        displayName: "Build Job"
        steps:
         
          - task: VSBuild@1
            displayName: "Build Solution"
            inputs:
              solution: '**/*.sln'  
              msbuildArgs: '/p:Configuration=Release'  
              platform: 'Any CPU'
              configuration: 'Release'
 
         
          - task: PublishBuildArtifacts@1
            displayName: "Publish DACPAC as Artifact"
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/testdb/bin/Release'  
              ArtifactName: 'drop'
 
  - stage: Deploy
    displayName: "Deploy Stage"
    dependsOn: Build
    jobs:
      - job: DeployToAzureSQL
        displayName: 'Deploy to Azure SQL Database'
        pool:
          vmImage: 'ubuntu-latest'  # Using a Linux agent
        steps:
          - download: current
            artifact: 'drop'
            displayName: 'Download Build Artifacts'
          
          # Install sqlpackage on the Linux agent
          - script: |
              wget -q https://aka.ms/sqlpackage-linux -O sqlpackage.zip
              unzip -q sqlpackage.zip -d sqlpackage
              sudo chmod +x sqlpackage/sqlpackage
              sudo mv sqlpackage/sqlpackage /usr/local/bin/sqlpackage
            displayName: 'Install sqlpackage'

          # Use sqlpackage to deploy the DACPAC file
          - script: |
              /usr/local/bin/sqlpackage /Action:Publish \
                /SourceFile:$(Pipeline.Workspace)/drop/testdb.dacpac \
                /TargetServerName:sampdbdac.database.windows.net \
                /TargetDatabaseName:sampdbdac \
                /TargetUser:azureconn \
                /TargetPassword:Password@
            displayName: 'Deploy DACPAC to Azure SQL Database'
                    